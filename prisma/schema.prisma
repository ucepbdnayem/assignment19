// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model category {
  id             BigInt     @id @default(autoincrement())
  parentId       BigInt?
  title          String?    @db.VarChar(75)
  metaTitle      String?    @db.VarChar(100)
  slug           String?    @db.VarChar(100)
  content        String?    @db.VarChar(100)
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  category       category?  @relation("categoryTocategory", fields: [parentId], references: [id], onDelete: Restrict, map: "FK_category")
  other_category category[] @relation("categoryTocategory")

  @@index([parentId], map: "FK_category")
}

model user {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  firstName    String?   @db.VarChar(100)
  middleName   String?   @db.VarChar(100)
  lastName     String?   @db.VarChar(100)
  mobile       String?   @db.VarChar(100)
  email        String?   @db.VarChar(100)
  password     String?   @db.VarChar(100)
  admin        Boolean?
  registeredAt DateTime? @db.DateTime(0)
  lastLogin    DateTime? @db.Timestamp(0)
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  cart         cart[]
  order        order[]
  product      product[]
}

model cart {
  id         BigInt   @id @default(autoincrement())
  title      String?  @db.VarChar(100)
  sessionId  String?  @db.VarChar(100)
  token      String?  @db.VarChar(100)
  status     String?  @db.VarChar(100)
  firstName  String?  @db.VarChar(100)
  middleName String?  @db.VarChar(100)
  lastName   String?  @db.VarChar(100)
  mobile     String?  @db.VarChar(100)
  email      String?  @db.VarChar(100)
  city       String?  @db.VarChar(100)
  country    String?  @db.VarChar(100)
  userId     BigInt?  @db.UnsignedBigInt
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  user       user?    @relation(fields: [userId], references: [id], onDelete: Restrict, map: "FK_cart")

  @@index([userId], map: "FK_cart")
}

model order {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title        String?  @db.VarChar(100)
  token        String?  @db.VarChar(100)
  subTotal     Int?
  itemDiscount Int?
  tax          Int?
  total        Int?
  discount     Int?
  grandTotal   Int?
  firstName    String?  @db.VarChar(100)
  middleName   String?  @db.VarChar(100)
  lastName     String?  @db.VarChar(100)
  mobile       String?  @db.VarChar(100)
  email        String?  @db.VarChar(100)
  city         String?  @db.VarChar(100)
  country      String?  @db.VarChar(100)
  userId       BigInt?  @db.UnsignedBigInt
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  user         user?    @relation(fields: [userId], references: [id], onDelete: Restrict, map: "FK_order")

  @@index([userId], map: "FK_order")
}

model product {
  id             BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  firstName      String?          @db.VarChar(100)
  metaTitle      String?          @db.VarChar(100)
  slug           String?          @db.VarChar(100)
  summary        String?          @db.VarChar(100)
  price          Int?
  discount       Int?
  publishedAt    DateTime         @default(now()) @db.Timestamp(0)
  startsAt       DateTime?  @db.Timestamp(0)
  endsAt         DateTime?  @db.Timestamp(0)
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  userId         BigInt?          @db.UnsignedBigInt
  user           user?            @relation(fields: [userId], references: [id], onDelete: Restrict, map: "FK_product")
  product_meta   product_meta[]
  product_review product_review[]

  @@index([userId], map: "FK_product")
}

model product_meta {
  id        BigInt   @id @default(autoincrement())
  key       String?  @db.VarChar(100)
  content   String?  @db.VarChar(100)
  productId BigInt?  @db.UnsignedBigInt
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  product   product? @relation(fields: [productId], references: [id], onDelete: Restrict, map: "FK_product_meta")

  @@index([productId], map: "FK_product_meta")
}

model product_review {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title     String?  @db.VarChar(100)
  rating    String?  @db.VarChar(100)
  content   String?  @db.VarChar(100)
  productId BigInt?  @db.UnsignedBigInt
  createAt      DateTime?  @db.Timestamp(0)
  updateAt      DateTime?  @db.Timestamp(0)
  product   product? @relation(fields: [productId], references: [id], onDelete: Restrict, map: "FK_product_review")

  @@index([productId], map: "FK_product_review")
}